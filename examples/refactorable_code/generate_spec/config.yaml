prompts:
  generate: |-
    You are tasked with generating a list of diverse, real-world scenarios that can be used to
    create functions. Each scenario should be grounded in common software development challenges and
    must naturally lead to code that, while functionally correct, has room for refactoring due to
    issues like duplicated code, deep nesting, unclear naming, or other code smells.

    Please produce a list of {num_samples} distinct scenarios. For each scenario, include:

    1. purpose: The real world purpose of the function.
    2. name: The name of the function.
    3. signature: The signature of the function. Make sure to put this in quotes in the YAML.
    4. length: How long the function should be? Specify this between 1000-5000 lines.
    5. code_smells: What type of issues the code should have that require refactoring, such as:
      - Multiple concerns (the function does more than one thing)
      - Magic numbers (unexplained numeric literals)
      - Duplicated code
      - Unclear variable names
    6. language: What language to write the code in. For now, always use "python" for this.
    7. constraints: Any constraints or edge cases that could be encountered.
    8. potential_pitfalls: Hints at potential pitfalls or design challenges that would encourage
       writing code that is refactorable.

    The goal is to ensure that the resulting functions are realistic, embody real-world complexity,
    and have deliberate areas for improvement during refactoring.

    Return the final list of specs as an array in YAML format wrapped within a ```yaml code block.
